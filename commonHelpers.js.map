{"version":3,"file":"commonHelpers.js","sources":["../src/js/markup_cart.js","../src/js/cart_products.js","../src/js/cart_checkout.js"],"sourcesContent":["export const getEmptyCartMarkup = () =>\n  `\n      <picture>\n          <source\n            srcset=\"\n              ./img/empty_cart/empty-cart-desktop-1x.png 1x,\n              ./img/empty_cart/empty-cart-desktop-2x.png 2x\n            \"\n            media=\"\n            (min-width: 1440px)\"\n          />\n          <source\n            srcset=\"\n              ./img/empty_cart/empty-cart-tab-1x.png 1x,\n              ./img/empty_cart/empty-cart-tab-2x.png 2x\n            \"\n            media=\"\n            (min-width: 768px)\"\n          />\n          <source\n            srcset=\"\n              ./img/empty_cart/empty-cart-mob-1x.png 1x,\n              ./img/empty_cart/empty-cart-mob-2x.png 2x\n            \"\n            media=\"\n            (min-width: 375px)\"\n          />\n          <img\n            src=\"./img/empty_cart/empty-cart-mob-1x.png\"\n            alt=\"Empty Cart Image\"\n            class=\"empty-cart-image\"\n          />\n        </picture>\n        <h2 class=\"empty-cart-title\">\n          Your basket is <span class=\"empty-cart-title-span\">empty...</span>\n        </h2>\n        <p class=\"empty-cart-text\">\n          Go to the main page to select your favorite products and add them to\n          the cart.\n        </p>\n    `;\n\nexport const getCartMarkup = products =>\n  `\n     <div class=\"delete-all\">\n    <button type=\"button\" class=\"btn-delete-all\"> Delete All \n      <span class=\"icon-close-sharp\">\n        <svg class=\"icon-basket\" width=\"24\" height=\"24\">\n          <use href=\"/img/symbol-defs.svg#icon-ion_close-sharp\"></use>\n        </svg>\n      </span>\n    </button>\n  </div>\n  <ul class=\"cart-products-list\">\n    ${products\n      .map(\n        ({ _id, name, img, category, size, price }) => `\n      <li class=\"cart-product-item\" data-product-id=\"${_id}\">\n        <div class=\"cart-product-container\">\n          <div class=\"cart-product-img-container\">\n            <img src=\"${img}\" alt=\"${name}\" width=\"64\" height=\"64\" class=\"cart-product-img\">\n          </div>\n          <div class=\"cart-product-parameter-container\">\n            <h2 class=\"cart-product-title\">${name}</h2>\n            <p class=\"cart-product-parameter\">Category: <span class=\"cart-span-parameter-value\">${\n              category ? category.replace(/_/g, ' ') : ''\n            }</span></p>\n            <p class=\"cart-product-parameter\">Size: <span class=\"cart-span-parameter-value\">${size}</span></p>\n            <p class=\"price\">$${price}</p>\n          </div>\n          <div class=\"cart-delete\">\n            <button type=\"button\" class=\"cart-btn-delete\">\n              <span class=\"cart-icon-close-sharp\">\n                <svg class=\"icon-basket\" width=\"24\" height=\"24\">\n                  <use href=\"/img/symbol-defs.svg#icon-ion_close-sharp\"></use>\n                </svg>\n              </span>\n            </button>\n          </div>\n        </div>\n      </li>`\n      )\n      .join('')}\n  </ul>\n`;\n\nexport const getcheckoutMarkup = () => `\n     <h2 class=\"checkout-title\">Your order</h2>\n      <div class=\"checkout-total-wrap\">\n        <p class=\"checkout-text\">Total</p>\n        <p class=\"checkout-total\">$0.00</p>\n      </div>\n\n      <div class=\"checkout-input-wrap\">\n        <label class=\"checkout-input-label\" for=\"checkoutEmail\"></label>\n        <input\n          class=\"checkout-input-email\"\n          type=\"email\"\n          id=\"checkoutEmail\"\n          name=\"email\"\n          placeholder=\"example@mail.com:\"\n          required\n        />\n        <button class=\"checkout-button\" type=\"submit\">Checkout</button>\n        `;\n","import ApiService from './requests';\nimport { ShopStorage } from './local-storage';\nimport {\n  getEmptyCartMarkup,\n  getCartMarkup,\n  getcheckoutMarkup,\n} from './markup_cart';\n\nconst basket = document.getElementById('basket');\nconst cartTitle = document.getElementById('cart-counter-page');\nconst storage = new ShopStorage('productsBasket');\nconst api = new ApiService();\n\nasync function updateCart() {\n  const products = storage.getAllProducts();\n  console.log('Current products in storage:', products); //проверка\n  // Формування розмітки контейнерів. якщо кошик порожній відмальовується Empty, у іншову випадку відмальовується розмітка CART\n  if (products.length === 0) {\n    console.log('Basket is empty. Displaying empty cart markup.'); //проверка\n    basket.innerHTML = '';\n    basket.insertAdjacentHTML('beforeend', getEmptyCartMarkup());\n  } else {\n    console.log('Fetching product details for each product in the cart.'); //проверка\n    const productDetailsPromises = products.map(async ({ _id, quantity }) => {\n      try {\n        if (_id) {\n          const productDetails = await api.getProductById(_id);\n          return { ...productDetails, quantity };\n        } else {\n          console.error('_id is undefined or empty for a product in the cart');\n          return null;\n        }\n      } catch (error) {\n        console.error(`Error fetching product details for _id: ${_id}`, error);\n        return null;\n      }\n    });\n\n    const productDetailsArray = await Promise.all(productDetailsPromises);\n    const validProductDetails = productDetailsArray.filter(\n      details => details !== null\n    );\n    console.log(\n      'Displaying cart markup with product details:',\n      validProductDetails\n    ); //проверка\n    basket.innerHTML = '';\n    basket.insertAdjacentHTML('beforeend', getCartMarkup(validProductDetails));\n    basket.insertAdjacentHTML('beforeend', getcheckoutMarkup());\n  }\n\n  const productCount = products.length;\n  console.log('Updating cart counter with product count:', productCount); //проверка\n  cartTitle.textContent = `CART (${productCount})`;\n}\n\nupdateCart();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.body.addEventListener('click', async event => {\n    const btnDeleteAll = event.target.closest('.btn-delete-all');\n    const btnDelete = event.target.closest('.cart-btn-delete');\n\n    if (btnDeleteAll) {\n      console.log('Deleting all products from storage.');\n      storage.removeAllProducts();\n      console.log('Updating cart after removing all products.');\n      updateCart();\n    } else if (btnDelete) {\n      const productId =\n        btnDelete.closest('.cart-product-item').dataset.productId;\n      console.log(`Deleting product with ID: ${productId}`);\n      storage.removeProduct(productId); // ИЗМЕНЕНИЕ\n      updateCart();\n    }\n  });\n});\n","// Імпорт\nimport {\n  getEmptyCartMarkup,\n  getCartMarkup,\n  getcheckoutMarkup,\n} from './markup_cart';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Референси\n  const refs = {\n    totalPriceElement: document.querySelector('.checkout-total'),\n    emailInput: document.querySelector('.checkout-input-email'),\n    checkoutButton: document.querySelector('.checkout-button'),\n    cartContainer: document.querySelector('.cart-container'),\n  };\n\n  // EventListener oна чекаут кнопку\n  refs.checkoutButton.addEventListener('click', handleCheckout);\n\n  function handleCheckout(event) {\n    event.preventDefault();\n\n    checkout();\n  }\n\n  // Функція чекаута\n  function checkout() {\n    const emailValue = refs.emailInput.value;\n\n    // Валідація в інпуті\n    if (!emailValue || !isValidEmail(emailValue)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n\n    // Завантажує правильну розмітку: або порожню корзину, або товари й ціну\n    const cartMarkup =\n      products.length > 0 ? getCartMarkup(products) : getEmptyCartMarkup();\n\n    refs.cartContainer.innerHTML = cartMarkup;\n\n    // Повідомлення про успішний чекаут\n    alert(`Checkout completed! Total Price: $${getTotalPrice(products)}.`);\n\n    // Скидає в нуль\n    refs.totalPriceElement.textContent = '0.00';\n\n    updateTotalPrice(0);\n\n    // Чистить сховище\n    localStorage.clear();\n  }\n\n  // Оновлює числа ціни\n  function updateTotalPrice(price) {\n    refs.totalPriceElement.textContent = price.toFixed(2);\n  }\n\n  // Валідація пошти\n  function isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  // Обчислює загальну суму\n  function getTotalPrice(products) {\n    return products.reduce((total, { price }) => total + price, 0).toFixed(2);\n  }\n});\n"],"names":["getEmptyCartMarkup","getCartMarkup","products","_id","name","img","category","size","price","getcheckoutMarkup","basket","cartTitle","storage","ShopStorage","api","ApiService","updateCart","productDetailsPromises","quantity","error","validProductDetails","details","productCount","event","btnDeleteAll","btnDelete","productId","refs","handleCheckout","checkout","emailValue","isValidEmail","cartMarkup","getTotalPrice","updateTotalPrice","email","total"],"mappings":"kGAAO,MAAMA,EAAqB,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAyCWC,EAAgBC,GAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWIA,EACC,IACC,CAAC,CAAE,IAAAC,EAAK,KAAAC,EAAM,IAAAC,EAAK,SAAAC,EAAU,KAAAC,EAAM,MAAAC,CAAK,IAAO;AAAA,uDACAL;AAAA;AAAA;AAAA,wBAG/BE,WAAaD;AAAA;AAAA;AAAA,6CAGQA;AAAA,kGAE/BE,EAAWA,EAAS,QAAQ,KAAM,GAAG,EAAI;AAAA,8FAEuCC;AAAA,gCAC9DC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAazB,EACA,KAAK,EAAE;AAAA;AAAA,EAIDC,EAAoB,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UC9EjCC,EAAS,SAAS,eAAe,QAAQ,EACzCC,EAAY,SAAS,eAAe,mBAAmB,EACvDC,EAAU,IAAIC,EAAY,gBAAgB,EAC1CC,EAAM,IAAIC,EAEhB,eAAeC,GAAa,CAC1B,MAAMd,EAAWU,EAAQ,iBAGzB,GAFA,QAAQ,IAAI,+BAAgCV,CAAQ,EAEhDA,EAAS,SAAW,EACtB,QAAQ,IAAI,gDAAgD,EAC5DQ,EAAO,UAAY,GACnBA,EAAO,mBAAmB,YAAaV,EAAoB,CAAA,MACtD,CACL,QAAQ,IAAI,wDAAwD,EACpE,MAAMiB,EAAyBf,EAAS,IAAI,MAAO,CAAE,IAAAC,EAAK,SAAAe,KAAe,CACvE,GAAI,CACF,OAAIf,EAEK,CAAE,GADc,MAAMW,EAAI,eAAeX,CAAG,EACvB,SAAAe,IAE5B,QAAQ,MAAM,qDAAqD,EAC5D,KAEV,OAAQC,EAAP,CACA,eAAQ,MAAM,2CAA2ChB,IAAOgB,CAAK,EAC9D,IACR,CACP,CAAK,EAGKC,GADsB,MAAM,QAAQ,IAAIH,CAAsB,GACpB,OAC9CI,GAAWA,IAAY,IAC7B,EACI,QAAQ,IACN,+CACAD,CACN,EACIV,EAAO,UAAY,GACnBA,EAAO,mBAAmB,YAAaT,EAAcmB,CAAmB,CAAC,EACzEV,EAAO,mBAAmB,YAAaD,EAAmB,CAAA,CAC3D,CAED,MAAMa,EAAepB,EAAS,OAC9B,QAAQ,IAAI,4CAA6CoB,CAAY,EACrEX,EAAU,YAAc,SAASW,IACnC,CAEAN,IAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,SAAS,KAAK,iBAAiB,QAAS,MAAMO,GAAS,CACrD,MAAMC,EAAeD,EAAM,OAAO,QAAQ,iBAAiB,EACrDE,EAAYF,EAAM,OAAO,QAAQ,kBAAkB,EAEzD,GAAIC,EACF,QAAQ,IAAI,qCAAqC,EACjDZ,EAAQ,kBAAiB,EACzB,QAAQ,IAAI,4CAA4C,EACxDI,YACSS,EAAW,CACpB,MAAMC,EACJD,EAAU,QAAQ,oBAAoB,EAAE,QAAQ,UAClD,QAAQ,IAAI,6BAA6BC,GAAW,EACpDd,EAAQ,cAAcc,CAAS,EAC/BV,GACD,CACL,CAAG,CACH,CAAC,ECrED,SAAS,iBAAiB,mBAAoB,UAAY,CAExD,MAAMW,EAAO,CACX,kBAAmB,SAAS,cAAc,iBAAiB,EAC3D,WAAY,SAAS,cAAc,uBAAuB,EAC1D,eAAgB,SAAS,cAAc,kBAAkB,EACzD,cAAe,SAAS,cAAc,iBAAiB,CAC3D,EAGEA,EAAK,eAAe,iBAAiB,QAASC,CAAc,EAE5D,SAASA,EAAeL,EAAO,CAC7BA,EAAM,eAAc,EAEpBM,GACD,CAGD,SAASA,GAAW,CAClB,MAAMC,EAAaH,EAAK,WAAW,MAGnC,GAAI,CAACG,GAAc,CAACC,EAAaD,CAAU,EAAG,CAC5C,MAAM,qCAAqC,EAC3C,MACD,CAGD,MAAME,EACJ,SAAS,OAAS,EAAI/B,EAAc,QAAQ,EAAID,IAElD2B,EAAK,cAAc,UAAYK,EAG/B,MAAM,qCAAqCC,EAAc,QAAQ,IAAI,EAGrEN,EAAK,kBAAkB,YAAc,OAErCO,EAAiB,CAAC,EAGlB,aAAa,MAAK,CACnB,CAGD,SAASA,EAAiB1B,EAAO,CAC/BmB,EAAK,kBAAkB,YAAcnB,EAAM,QAAQ,CAAC,CACrD,CAGD,SAASuB,EAAaI,EAAO,CAE3B,MADmB,6BACD,KAAKA,CAAK,CAC7B,CAGD,SAASF,EAAc/B,EAAU,CAC/B,OAAOA,EAAS,OAAO,CAACkC,EAAO,CAAE,MAAA5B,CAAK,IAAO4B,EAAQ5B,EAAO,CAAC,EAAE,QAAQ,CAAC,CACzE,CACH,CAAC"}